#데이콘 따릉이 문제풀이

import pandas as pd
import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error



#1. 데이터

path = './_data/ddarung/'

train_csv = pd.read_csv(path + 'train.csv', index_col=0)

test_csv = pd.read_csv(path + 'test.csv', index_col= 0)


#항상 데이터의 모양을 확인하는 습관을 들일것 . 
# print(train_csv.columns), 
# print(shape.train_csv), 
# print(train_csv.info()),
# print(train_csv.describe()) 
# print(type(train_csv))


#데이터에 대한 결측치 처리

#1. 제거법

print(train_csv.isnull().sum())

train_csv=train_csv.dropna()

print(train_csv.isnull().sum())

print(train_csv.info())

print(train_csv.shape)    #(1328, 10)


x= train_csv.drop(['count'], axis=1)

y= train_csv['count']



x_train, x_test, y_train, y_test = train_test_split(x, y,
                                                    train_size=0.75,
                                                    shuffle=True,
                                                    random_state=13)


#2. 모델 구성

model=Sequential()
model.add(Dense(16, input_dim=9))
model.add(Dense(32))
model.add(Dense(64))
model.add(Dense(128))
model.add(Dense(256))
model.add(Dense(128))
model.add(Dense(64))
model.add(Dense(32))
model.add(Dense(16))
model.add(Dense(8))
model.add(Dense(1))

#3. 컴파일, 훈련

model.compile(loss='mse', optimizer='adam')
model.fit(x_train,y_train,
          epochs=100,
          batch_size=3, verbose=1)

#4. 평가, 예측

loss = model.evaluate(x_test, y_test)
print('loss :', loss)

y_predict=model.predict(x_test)
r2=r2_score(y_test,y_predict)
print('r2 스코어 :', r2)

def RMSE(y_test, y_predict) :
    return np.sqrt(mean_squared_error(y_test, y_predict))

rmse = RMSE(y_test, y_predict)

print('RMSE =', rmse)


##### submission.csv를 만들어봅시다!!! #####

y_submit = model.predict(test_csv)
# print(y_submit)

submission = pd.read_csv(path + 'submission.csv', index_col=0)

# print(submission)

submission['count'] = y_submit

submission.to_csv(path + 'submit03060607.csv')


#RMSE = 57.55157213457362   layer 270  random 1231

#RMSE = 54.84502091476801 layer 360 random 121

#RMSE = 51.96399997444788  layer 12  random 13 epochs 100 batch 5

#RMSE = 51.946150905088956 동일, 배치 4

