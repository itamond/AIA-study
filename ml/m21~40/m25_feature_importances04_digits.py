# 10개 데이터셋
# 10개의 파일을 만든다
#[실습/과제] 피처를 한개씩 삭제하고 성능비교
#모델은 RF로만 한다


import numpy as np
from sklearn.datasets import load_digits
from sklearn.preprocessing import MinMaxScaler, StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
import pandas as pd
#1. 데이터


x, y = load_digits(return_X_y=True)
x = pd.DataFrame(x).drop([0, 20, 25], axis=1)

x_train, x_test, y_train, y_test = train_test_split(
    x,y, train_size=0.8, shuffle=True, random_state=337
)

#2. 모델
model = RandomForestClassifier()

#3. 훈련
model.fit(x_train, y_train)

#4. 평가, 예측
result = model.score(x_test, y_test)
print('model.score :', result)
y_predict = model.predict(x_test)
print('ACC :', accuracy_score(y_test, y_predict))

print('====================================')
print(model, ":", model.feature_importances_)


# model.score : 0.975
# ACC : 0.975
# ====================================
# RandomForestClassifier() : [0.00000000e+00 1.83187733e-03 2.04454320e-02 9.66817825e-03
#  9.28958706e-03 2.08030373e-02 1.00060428e-02 8.72143294e-04
#  8.01584432e-05 1.13855242e-02 2.21523645e-02 6.33195181e-03
#  1.70089789e-02 2.54986229e-02 5.64059145e-03 6.59329761e-04
#  9.90019760e-05 7.42691840e-03 2.13228360e-02 2.54271159e-02
#  2.90725147e-02 5.71199669e-02 9.05744140e-03 4.15560232e-04
#  4.34775162e-05 1.41957191e-02 4.27593204e-02 2.63020090e-02
#  3.20015515e-02 2.02038850e-02 3.36117679e-02 2.43730937e-05
#  0.00000000e+00 2.81432034e-02 2.87354042e-02 1.96476432e-02
#  3.79468211e-02 2.13178288e-02 2.70745095e-02 0.00000000e+00
#  6.38606385e-05 1.21064083e-02 3.64197634e-02 3.76448877e-02
#  2.31105836e-02 1.76654549e-02 2.05137419e-02 8.37266753e-05
#  5.03904418e-05 2.35139705e-03 1.69905030e-02 2.33712319e-02
#  1.47478065e-02 2.15351722e-02 2.34304849e-02 2.30509024e-03
#  0.00000000e+00 1.71376504e-03 1.98851198e-02 9.62784330e-03
#  2.29925407e-02 2.90099647e-02 1.70001608e-02 3.75741295e-03]


# model.score : 0.9666666666666667
# ACC : 0.9666666666666667
# ====================================
# RandomForestClassifier() : [2.87686154e-03 2.41629916e-02 1.14474635e-02 1.09592501e-02
#  1.97069250e-02 1.03094093e-02 8.28664334e-04 1.94624379e-04
#  1.39736098e-02 2.63853703e-02 8.84363252e-03 1.90341674e-02
#  2.87120248e-02 5.74245910e-03 7.33070757e-04 1.06506588e-04
#  9.91147477e-03 2.44020321e-02 2.49766579e-02 5.36860426e-02
#  9.20179593e-03 3.26788141e-04 4.27888031e-05 4.49005728e-02
#  2.81326316e-02 3.55649951e-02 2.62264204e-02 3.09937002e-02
#  0.00000000e+00 0.00000000e+00 3.35122375e-02 2.52080836e-02
#  1.74856390e-02 3.77512711e-02 2.01289429e-02 2.52482394e-02
#  0.00000000e+00 0.00000000e+00 1.33078146e-02 3.60008566e-02
#  4.81146683e-02 2.00954855e-02 1.77575707e-02 1.96837996e-02
#  9.49220920e-05 5.75564505e-05 2.28895546e-03 1.72458437e-02
#  2.11271498e-02 1.38230270e-02 2.44163084e-02 2.78376144e-02
#  1.55581045e-03 5.48595290e-05 2.47319869e-03 2.12398765e-02
#  1.08521920e-02 2.38521676e-02 2.57220964e-02 1.71025221e-02
#  3.57835929e-03]
